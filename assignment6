#Q1
import numpy as np
import matplotlib.pyplot as plt
M = float(input("Enter a value for M: "))
x = np.linspace(-10, 10, 400)
y1 = M * x**2  
y2 = M * np.sin(x)  
plt.figure(figsize=(8, 5))
plt.plot(x, y1, label=r'$y=Mx^2$', color='blue', linestyle='-')
plt.plot(x, y2, label=r'$y=M\sin(x)$', color='red', linestyle='--')
plt.title("Graphs of y=MxÂ² and y=Msin(x)")
plt.xlabel("X-axis")
plt.ylabel("Y-axis")
plt.legend()
plt.grid(True)
plt.show()

#Q2
import pandas as pd
import seaborn as sns
data = {'Subjects': ['Math', 'Physics', 'Chemistry', 'Biology', 'Computer Science'],
        'Scores': [85, 78, 92, 74, 89]}
df = pd.DataFrame(data)
plt.figure(figsize=(8, 5))
ax = sns.barplot(x='Subjects', y='Scores', data=df, palette='viridis')
for p in ax.patches:
    ax.annotate(f'{p.get_height()}', (p.get_x() + p.get_width() / 2., p.get_height()),
                ha='center', va='bottom', fontsize=12, color='black')
plt.title("Subject-wise Scores")
plt.xlabel("Subjects")
plt.ylabel("Scores")
plt.grid(axis='y', linestyle='--')
plt.show()

#Q3
import numpy as np
import matplotlib.pyplot as plt
roll_number = int(input("Enter your roll number: "))  
np.random.seed(roll_number)
data = np.random.randn(50)
cumsum_data = np.cumsum(data)
fig, axes = plt.subplots(2, 2, figsize=(10, 8))
axes[0, 0].plot(cumsum_data, color='b', linestyle='-', marker='o')
axes[0, 0].set_title("Cumulative Sum Plot")
axes[0, 0].set_xlabel("Index")
axes[0, 0].set_ylabel("Cumulative Sum")
axes[0, 0].grid(True)
axes[0, 1].scatter(range(50), data, color='r', marker='o')
axes[0, 1].set_title("Scatter Plot (Random Noise)")
axes[0, 1].set_xlabel("Index")
axes[0, 1].set_ylabel("Value")
axes[0, 1].grid(True)
plt.tight_layout()
plt.show()

#Q4
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
url = "https://raw.githubusercontent.com/AnjulaMehto/MCA/main/company_sales_data.csv"
df_sales = pd.read_csv(url)
plt.figure(figsize=(8, 5))
sns.lineplot(x=df_sales['month_number'], y=df_sales['total_profit'], marker='o', color='g')
plt.title("Total Profit Over Months")
plt.xlabel("Month")
plt.ylabel("Total Profit")
plt.grid(True)
plt.show()
plt.figure(figsize=(8, 5))
for column in df_sales.columns[1:-1]:  
    sns.lineplot(x=df_sales['month_number'], y=df_sales[column], label=column)
plt.title("Sales Data for Different Products")
plt.xlabel("Month")
plt.ylabel("Sales")
plt.legend()
plt.grid(True)
plt.show()
df_sales.drop(columns=['month_number']).plot(kind='bar', figsize=(12, 6), stacked=False)
plt.title("Sales Data Overview")
plt.xlabel("Month")
plt.ylabel("Values")
plt.legend(loc="upper right")
plt.grid(axis='y', linestyle='--')
plt.show()


